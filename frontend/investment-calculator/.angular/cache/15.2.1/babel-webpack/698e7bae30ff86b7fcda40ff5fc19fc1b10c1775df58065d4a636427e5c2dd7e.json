{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport Validation from './utils/validation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Por favor, informe o valor de investimento.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, AppComponent_div_11_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"investmentValue\"].errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AppComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = new FormGroup({\n      fullname: new FormControl(''),\n      username: new FormControl(''),\n      email: new FormControl(''),\n      password: new FormControl(''),\n      confirmPassword: new FormControl(''),\n      acceptTerms: new FormControl(false)\n    });\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      investmentValue: ['', Validators.required, Validators.min(1)]\n    }, {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(JSON.stringify(this.form.value, null, 2));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"my-app\"]],\n  decls: 19,\n  vars: 5,\n  consts: [[1, \"container-md\", \"mt-3\"], [1, \"row\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"investmentValue\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"investmentValue\", \"formControlName\", \"investmentValue\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"Month\", 1, \"form-label\"], [\"name\", \"Month\", \"type\", \"number\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n      i0.ɵɵtext(5, \"Calcular CDB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Para come\\u00E7ar, qual valor voc\\u00EA gostaria de investir?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵtemplate(11, AppComponent_div_11_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Quanto tempo deixaria seu dinheiro investido?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"button\", 12);\n      i0.ɵɵtext(18, \"Calcular\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.submitted && ctx.f[\"investmentValue\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"investmentValue\"].errors);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAGEA,SAAS,EACTC,WAAW,EACXC,UAAU,QACL,gBAAgB;AACvB,OAAOC,UAAU,MAAM,oBAAoB;;;;;;ICQ7BC,2BAAqD;IAAAA,2DAA2C;IAAAA,iBAAM;;;;;IADxGA,+BAA+E;IAC7EA,qEAAsG;IACxGA,iBAAM;;;;IADEA,eAA6C;IAA7CA,qEAA6C;;;;;;;;ADAjE,OAAM,MAAOC,YAAY;EAWvBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAV/B,SAAI,GAAc,IAAIP,SAAS,CAAC;MAC9BQ,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC7BQ,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,CAAC;MAC7BS,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC1BU,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC7BW,eAAe,EAAE,IAAIX,WAAW,CAAC,EAAE,CAAC;MACpCY,WAAW,EAAE,IAAIZ,WAAW,CAAC,KAAK;KACnC,CAAC;IACF,cAAS,GAAG,KAAK;EAE8B;EAE/Ca,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAChC;MACEC,eAAe,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,GAAG,CAAC,CAAC,CAAC;KAC7D,EACD;MACEC,UAAU,EAAE,CAACjB,UAAU,CAACkB,KAAK,CAAC,UAAU,EAAE,iBAAiB,CAAC;KAC7D,CACF;EACH;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAACP,IAAI,CAACQ,QAAQ;EAC3B;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACV,IAAI,CAACW,OAAO,EAAE;MACrB;;IAGFC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACf,IAAI,CAACgB,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EACvD;;AApCW1B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBzBhC,8BAA+B;MAIAA,4BAAY;MAAAA,iBAAK;MACxCA,+BAAkD;MAAxBA;QAAA,OAAYiC,cAAU;MAAA,EAAC;MAC/CjC,8BAA6B;MACqBA,6EAAmD;MAAAA,iBAAQ;MAC3GA,4BAME;MACFA,+DAEM;MACRA,iBAAM;MAENA,+BAA6B;MACWA,8DAA6C;MAAAA,iBAAQ;MAC3FA,6BAAuD;MACzDA,iBAAM;MACNA,+BAA6B;MACmBA,yBAAQ;MAAAA,iBAAS;;;MApB5DA,eAAkB;MAAlBA,oCAAkB;MAQnBA,eAAsE;MAAtEA,sGAAsE;MAElEA,eAA8C;MAA9CA,uEAA8C","names":["FormGroup","FormControl","Validators","Validation","i0","AppComponent","constructor","formBuilder","fullname","username","email","password","confirmPassword","acceptTerms","ngOnInit","form","group","investmentValue","required","min","validators","match","f","controls","onSubmit","submitted","invalid","console","log","JSON","stringify","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\projetos\\investment-calculator\\frontend\\investment-calculator\\src\\app\\app.component.ts","C:\\projetos\\investment-calculator\\frontend\\investment-calculator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport Validation from './utils/validation';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\nexport class AppComponent {\n  form: FormGroup = new FormGroup({\n    fullname: new FormControl(''),\n    username: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n    confirmPassword: new FormControl(''),\n    acceptTerms: new FormControl(false),\n  });\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group(\n      {\n        investmentValue: ['', Validators.required, Validators.min(1)],\n      },\n      {\n        validators: [Validation.match('password', 'confirmPassword')],\n      }\n    );\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value, null, 2));\n  }\n}\n","<div class=\"container-md mt-3\">\n  <div class=\"row\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Calcular CDB</h5>\n        <form  [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group mb-3\">\n            <label for=\"investmentValue\" class=\"form-label\">Para começar, qual valor você gostaria de investir?</label>\n            <input\n              type=\"text\"\n              id=\"investmentValue\"\n              formControlName=\"investmentValue\"\n              class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f['investmentValue'].errors }\"\n            />\n            <div *ngIf=\"submitted && f['investmentValue'].errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f['investmentValue'].errors['required']\">Por favor, informe o valor de investimento.</div>\n            </div>\n          </div>\n\n          <div class=\"form-group mb-3\">\n            <label for=\"Month\" class=\"form-label\">Quanto tempo deixaria seu dinheiro investido?</label>\n            <input name=\"Month\" type=\"number\" class=\"form-control\">\n          </div>\n          <div class=\"form-group mb-3\">\n            <button type=\"submit\" class=\"btn btn-primary\">Calcular</button>\n          </div>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}