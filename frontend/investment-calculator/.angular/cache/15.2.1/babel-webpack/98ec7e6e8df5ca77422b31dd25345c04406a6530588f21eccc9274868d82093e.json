{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./app.service\";\nimport * as i3 from \"@angular/common\";\nfunction AppComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Por favor, informe o valor de investimento.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AppComponent_div_11_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"investmentValue\"].errors[\"required\"]);\n  }\n}\nfunction AppComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Por favor, informe o prazo que seu dinheiro ficar\\u00E1 investido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AppComponent_div_16_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"month\"].errors[\"required\"]);\n  }\n}\nfunction AppComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AppComponent {\n  constructor(formBuilder, AppService) {\n    this.formBuilder = formBuilder;\n    this.AppService = AppService;\n    this.form = new FormGroup({\n      investmentValue: new FormControl(''),\n      month: new FormControl('')\n    });\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      investmentValue: ['', Validators.required],\n      month: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(JSON.stringify(this.form.value, null, 2));\n    this.AppService.postData(this.form.value).subscribe(data => {\n      this.cdbResponse = data;\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AppService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 27,\n  vars: 10,\n  consts: [[1, \"container-md\", \"mt-3\"], [1, \"row\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"investmentValue\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"investmentValue\", \"formControlName\", \"investmentValue\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"month\", \"formControlName\", \"month\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"col-md-3\", 4, \"ngIf\"], [1, \"col-md-3\"], [1, \"card\", \"mt-3\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n      i0.ɵɵtext(5, \"Calcular CDB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Para come\\u00E7ar, qual valor voc\\u00EA gostaria de investir?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵtemplate(11, AppComponent_div_11_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Para come\\u00E7ar, qual valor voc\\u00EA gostaria de investir?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵtemplate(16, AppComponent_div_16_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 6)(18, \"button\", 11);\n      i0.ɵɵtext(19, \"Calcular\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(20, AppComponent_div_20_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementStart(21, \"div\", 13);\n      i0.ɵɵelement(22, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 13);\n      i0.ɵɵelement(24, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 13);\n      i0.ɵɵelement(26, \"div\", 14);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.submitted && ctx.f[\"investmentValue\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"investmentValue\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f[\"month\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"month\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.cdbResponse.grossTotalAmount.length > 0);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAGEA,SAAS,EACTC,WAAW,EACXC,UAAU,QACL,gBAAgB;;;;;;;ICGTC,2BAAqD;IAAAA,2DAA2C;IAAAA,iBAAM;;;;;IADxGA,+BAA+E;IAC7EA,qEAAsG;IACxGA,iBAAM;;;;IADEA,eAA6C;IAA7CA,qEAA6C;;;;;IASnDA,2BAA2C;IAAAA,mFAC3C;IAAAA,iBAAM;;;;;IAFRA,+BAAqE;IACnEA,qEACM;IACRA,iBAAM;;;;IAFEA,eAAmC;IAAnCA,2DAAmC;;;;;IAWnDA,+BAAsE;IACpEA,0BAEM;IACRA,iBAAM;;;;;;;;ADpBV,OAAM,MAAOC,YAAY;EAQvBC,YAAoBC,WAAwB,EAAUC,UAAsB;IAAxD,gBAAW,GAAXD,WAAW;IAAuB,eAAU,GAAVC,UAAU;IANhE,SAAI,GAAc,IAAIP,SAAS,CAAC;MAC9BQ,eAAe,EAAE,IAAIP,WAAW,CAAC,EAAE,CAAC;MACpCQ,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE;KAC1B,CAAC;IACF,cAAS,GAAG,KAAK;EAE+D;EAEhFS,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAChC;MACEJ,eAAe,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACW,QAAQ,CAAC;MAC1CJ,KAAK,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACW,QAAQ;KAChC,CACF;EACH;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAACH,IAAI,CAACI,QAAQ;EAC3B;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE;MACrB;;IAGFC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,IAAI,CAACY,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACrD,IAAI,CAAChB,UAAU,CAACiB,QAAQ,CAAC,IAAI,CAACb,IAAI,CAACY,KAAK,CAAC,CACtCE,SAAS,CAAEC,IAAI,IAAI;MAAG,IAAI,CAACC,WAAW,GAAGD,IAAI;IAAC,CAAC,CAAC;EACrD;;AAjCWtB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfzB7B,8BAA+B;MAIAA,4BAAY;MAAAA,iBAAK;MACxCA,+BAAiD;MAAxBA;QAAA,OAAY8B,cAAU;MAAA,EAAC;MAC9C9B,8BAA6B;MACqBA,6EAAmD;MAAAA,iBAAQ;MAC3GA,4BAC2E;MAC3EA,+DAEM;MACRA,iBAAM;MAENA,+BAA6B;MACqBA,8EAAmD;MAAAA,iBAAQ;MAC3GA,6BACiE;MACjEA,+DAGM;MACRA,iBAAM;MACNA,+BAA6B;MACmBA,yBAAQ;MAAAA,iBAAS;MAMvEA,gEAIM;MACNA,gCAAsB;MACpBA,2BAEM;MACRA,iBAAM;MACNA,gCAAsB;MACpBA,2BAEM;MACRA,iBAAM;MACNA,gCAAsB;MACpBA,2BAEM;MACRA,iBAAM;;;MA7CIA,eAAkB;MAAlBA,oCAAkB;MAIlBA,eAAsE;MAAtEA,sGAAsE;MAClEA,eAA8C;MAA9CA,uEAA8C;MAQlDA,eAA4D;MAA5DA,4FAA4D;MACxDA,eAAoC;MAApCA,6DAAoC;MAY3BA,eAA6C;MAA7CA,kEAA6C","names":["FormGroup","FormControl","Validators","i0","AppComponent","constructor","formBuilder","AppService","investmentValue","month","ngOnInit","form","group","required","f","controls","onSubmit","submitted","invalid","console","log","JSON","stringify","value","postData","subscribe","data","cdbResponse","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\projetos\\investment-calculator\\frontend\\investment-calculator\\src\\app\\app.component.ts","C:\\projetos\\investment-calculator\\frontend\\investment-calculator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AppService } from './app.service';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  cdbResponse: any;\n  form: FormGroup = new FormGroup({\n    investmentValue: new FormControl(''),\n    month: new FormControl(''),\n  });\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private AppService: AppService) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group(\n      {\n        investmentValue: ['', Validators.required],\n        month: ['', Validators.required]\n      },\n    );\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value, null, 2));\n    this.AppService.postData(this.form.value)\n      .subscribe((data) => { this.cdbResponse = data });\n  }\n}\n","<div class=\"container-md mt-3\">\n  <div class=\"row\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Calcular CDB</h5>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group mb-3\">\n            <label for=\"investmentValue\" class=\"form-label\">Para começar, qual valor você gostaria de investir?</label>\n            <input type=\"text\" id=\"investmentValue\" formControlName=\"investmentValue\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f['investmentValue'].errors }\" />\n            <div *ngIf=\"submitted && f['investmentValue'].errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f['investmentValue'].errors['required']\">Por favor, informe o valor de investimento.</div>\n            </div>\n          </div>\n\n          <div class=\"form-group mb-3\">\n            <label for=\"investmentValue\" class=\"form-label\">Para começar, qual valor você gostaria de investir?</label>\n            <input type=\"text\" id=\"month\" formControlName=\"month\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && f['month'].errors }\" />\n            <div *ngIf=\"submitted && f['month'].errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"f['month'].errors['required']\">Por favor, informe o prazo que seu dinheiro ficará investido.\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group mb-3\">\n            <button type=\"submit\" class=\"btn btn-primary\">Calcular</button>\n          </div>\n        </form>\n\n      </div>\n    </div>\n    <div class=\"col-md-3\" *ngIf=\"cdbResponse.grossTotalAmount.length > 0\">\n      <div class=\"card mt-3\">\n\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"card mt-3\">\n\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"card mt-3\">\n\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"card mt-3\">\n\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}