{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport Validation from './utils/validation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AppComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = new FormGroup({\n      fullname: new FormControl(''),\n      username: new FormControl(''),\n      email: new FormControl(''),\n      password: new FormControl(''),\n      confirmPassword: new FormControl(''),\n      acceptTerms: new FormControl(false)\n    });\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      fullname: ['', Validators.required],\n      username: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    }, {\n      validators: [Validation.match('password', 'confirmPassword')]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(JSON.stringify(this.form.value, null, 2));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"my-app\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[1, \"container-md\", \"mt-3\"], [1, \"row\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"InvestmentValue\", 1, \"form-label\"], [\"id\", \"InvestmentValue\", \"name\", \"InvestmentValue\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"Month\", 1, \"form-label\"], [\"name\", \"Month\", \"type\", \"number\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n      i0.ɵɵtext(5, \"Calcular CDB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onClickSubmit(ctx.formdata.value);\n      });\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Para come\\u00E7ar, qual valor voc\\u00EA gostaria de investir?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Quanto tempo deixaria seu dinheiro investido?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"button\", 11);\n      i0.ɵɵtext(17, \"Calcular\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"p\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵtextInterpolate1(\" Textbox result is: \", ctx.month, \" \");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAGEA,SAAS,EACTC,WAAW,EACXC,UAAU,QACL,gBAAgB;AACvB,OAAOC,UAAU,MAAM,oBAAoB;;;AAQ3C,OAAM,MAAOC,YAAY;EAWvBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAV/B,SAAI,GAAc,IAAIN,SAAS,CAAC;MAC9BO,QAAQ,EAAE,IAAIN,WAAW,CAAC,EAAE,CAAC;MAC7BO,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC7BQ,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,CAAC;MAC1BS,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC7BU,eAAe,EAAE,IAAIV,WAAW,CAAC,EAAE,CAAC;MACpCW,WAAW,EAAE,IAAIX,WAAW,CAAC,KAAK;KACnC,CAAC;IACF,cAAS,GAAG,KAAK;EAE8B;EAE/CY,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAChC;MACER,QAAQ,EAAE,CAAC,EAAE,EAAEL,UAAU,CAACc,QAAQ,CAAC;MACnCR,QAAQ,EAAE,CACR,EAAE,EACF,CACEN,UAAU,CAACc,QAAQ,EACnBd,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,EACvBf,UAAU,CAACgB,SAAS,CAAC,EAAE,CAAC,CACzB,CACF;MACDT,KAAK,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACO,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CACR,EAAE,EACF,CACER,UAAU,CAACc,QAAQ,EACnBd,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,EACvBf,UAAU,CAACgB,SAAS,CAAC,EAAE,CAAC,CACzB,CACF;MACDP,eAAe,EAAE,CAAC,EAAE,EAAET,UAAU,CAACc,QAAQ,CAAC;MAC1CJ,WAAW,EAAE,CAAC,KAAK,EAAEV,UAAU,CAACiB,YAAY;KAC7C,EACD;MACEC,UAAU,EAAE,CAACjB,UAAU,CAACkB,KAAK,CAAC,UAAU,EAAE,iBAAiB,CAAC;KAC7D,CACF;EACH;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAACR,IAAI,CAACS,QAAQ;EAC3B;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACX,IAAI,CAACY,OAAO,EAAE;MACrB;;IAGFC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,IAAI,CAACiB,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EACvD;;AAvDW3B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBzBC,8BAA+B;MAIAA,4BAAY;MAAAA,iBAAK;MACxCA,+BAAkD;MAA3CA;QAAA,OAAYC,qCAA6B;MAAA,EAAC;MAC/CD,8BAA6B;MACqBA,6EAAmD;MAAAA,iBAAQ;MAC3GA,4BAAoF;MACtFA,iBAAM;MACNA,+BAA6B;MACWA,8DAA6C;MAAAA,iBAAQ;MAC3FA,6BAAuD;MACzDA,iBAAM;MACNA,+BAA6B;MACmBA,yBAAQ;MAAAA,iBAAS;MAGnEA,0BAAG;MAACA,aAA6B;MAAAA,iBAAI;;;MAAjCA,gBAA6B;MAA7BA,6DAA6B","names":["FormGroup","FormControl","Validators","Validation","AppComponent","constructor","formBuilder","fullname","username","email","password","confirmPassword","acceptTerms","ngOnInit","form","group","required","minLength","maxLength","requiredTrue","validators","match","f","controls","onSubmit","submitted","invalid","console","log","JSON","stringify","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\projetos\\investment-calculator\\frontend\\investment-calculator\\src\\app\\app.component.ts","C:\\projetos\\investment-calculator\\frontend\\investment-calculator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport Validation from './utils/validation';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\nexport class AppComponent {\n  form: FormGroup = new FormGroup({\n    fullname: new FormControl(''),\n    username: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n    confirmPassword: new FormControl(''),\n    acceptTerms: new FormControl(false),\n  });\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group(\n      {\n        fullname: ['', Validators.required],\n        username: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(20),\n          ],\n        ],\n        email: ['', [Validators.required, Validators.email]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(40),\n          ],\n        ],\n        confirmPassword: ['', Validators.required],\n        acceptTerms: [false, Validators.requiredTrue],\n      },\n      {\n        validators: [Validation.match('password', 'confirmPassword')],\n      }\n    );\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value, null, 2));\n  }\n}\n","<div class=\"container-md mt-3\">\n  <div class=\"row\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Calcular CDB</h5>\n        <form  (ngSubmit)=\"onClickSubmit(formdata.value)\">\n          <div class=\"form-group mb-3\">\n            <label for=\"InvestmentValue\" class=\"form-label\">Para começar, qual valor você gostaria de investir?</label>\n            <input id=\"InvestmentValue\" name=\"InvestmentValue\" type=\"text\" class=\"form-control\">\n          </div>\n          <div class=\"form-group mb-3\">\n            <label for=\"Month\" class=\"form-label\">Quanto tempo deixaria seu dinheiro investido?</label>\n            <input name=\"Month\" type=\"number\" class=\"form-control\">\n          </div>\n          <div class=\"form-group mb-3\">\n            <button type=\"submit\" class=\"btn btn-primary\">Calcular</button>\n          </div>\n        </form>\n        <p> Textbox result is: {{month}} </p>\n\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}